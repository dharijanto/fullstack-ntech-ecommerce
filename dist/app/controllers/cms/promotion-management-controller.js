"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const app_config_1=require("../../../app-config"),base_controller_1=require("../base-controller"),local_shop_service_1=require("../../local-shop-services/local-shop-service"),Utils=require("../../../libs/utils"),path=require("path");let log=require("npmlog");const TAG="MainController";class PromotionManagementController extends base_controller_1.default{constructor(e){super(Object.assign(e,{viewPath:path.join(__dirname,"../../views")})),this.PROMOTION_IMAGES_PATH=app_config_1.default.IMAGE_PATH,this.imageService=new e.services.ImageService(e.db.sequelize,e.db.models),this.imageURLFormatter=(e=>`${app_config_1.default.BASE_URL}${app_config_1.default.IMAGE_MOUNT_PATH}${e}`),super.routeGet("/",(e,t,o)=>{t.render("cms/promotion-management")}),super.routeGet("/promotions",(e,t,o)=>{local_shop_service_1.default.getPromotions().then(t.json.bind(t)).catch(o)}),super.routePost("/promotion",(e,t,o)=>{const r=e.query.productId;r?local_shop_service_1.default.createPromotion(r,e.body).then(t.json.bind(t)).catch(o):t.json({status:!1,errMessage:"productId is required"})}),super.routePost("/promotion/edit",(e,t,o)=>{const r=e.query.productId;r?local_shop_service_1.default.updatePromotion(r,e.body.id,e.body).then(t.json.bind(t)).catch(o):t.json({status:!1,errMessage:"productId is required"})}),super.routePost("/promotion/delete",(e,t,o)=>{local_shop_service_1.default.deletePromotion(e.body.id).then(t.json.bind(t)).catch(o)}),this.routePost("/image/get-url",(e,t,o)=>{const r=e.body.filename;t.json({status:!0,data:Utils.getImageURL(r)})}),super.routeGet("/images",(e,t,o)=>{this.imageService.getImages(this.imageURLFormatter).then(e=>{log.verbose(TAG,"/images.GET():"+JSON.stringify(e)),t.json(e)}).catch(o)}),super.routePost("/image",this.imageService.getExpressUploadMiddleware(this.PROMOTION_IMAGES_PATH,this.imageURLFormatter)),super.routePost("/image/delete",(e,t,o)=>{log.verbose(TAG,"image/delete.POST: req.body="+JSON.stringify(e.body)),this.imageService.deleteImage(this.PROMOTION_IMAGES_PATH,e.body.filename).then(e=>{t.json(e)}).catch(o)})}}exports.default=PromotionManagementController;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvY29udHJvbGxlcnMvY21zL3Byb21vdGlvbi1tYW5hZ2VtZW50LWNvbnRyb2xsZXIudHMiXSwibmFtZXMiOlsiYXBwX2NvbmZpZ18xIiwicmVxdWlyZSIsImJhc2VfY29udHJvbGxlcl8xIiwibG9jYWxfc2hvcF9zZXJ2aWNlXzEiLCJVdGlscyIsInBhdGgiLCJsb2ciLCJUQUciLCJQcm9tb3Rpb25NYW5hZ2VtZW50Q29udHJvbGxlciIsImRlZmF1bHQiLCJbb2JqZWN0IE9iamVjdF0iLCJzaXRlRGF0YSIsInN1cGVyIiwiT2JqZWN0IiwiYXNzaWduIiwidmlld1BhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwidGhpcyIsIlBST01PVElPTl9JTUFHRVNfUEFUSCIsIklNQUdFX1BBVEgiLCJpbWFnZVNlcnZpY2UiLCJzZXJ2aWNlcyIsIkltYWdlU2VydmljZSIsImRiIiwic2VxdWVsaXplIiwibW9kZWxzIiwiaW1hZ2VVUkxGb3JtYXR0ZXIiLCJmaWxlbmFtZSIsIkJBU0VfVVJMIiwiSU1BR0VfTU9VTlRfUEFUSCIsInJvdXRlR2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsImdldFByb21vdGlvbnMiLCJ0aGVuIiwianNvbiIsImJpbmQiLCJjYXRjaCIsInJvdXRlUG9zdCIsInByb2R1Y3RJZCIsInF1ZXJ5IiwiY3JlYXRlUHJvbW90aW9uIiwiYm9keSIsInN0YXR1cyIsImVyck1lc3NhZ2UiLCJ1cGRhdGVQcm9tb3Rpb24iLCJpZCIsImRlbGV0ZVByb21vdGlvbiIsImRhdGEiLCJnZXRJbWFnZVVSTCIsImdldEltYWdlcyIsInJlc3AiLCJ2ZXJib3NlIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldEV4cHJlc3NVcGxvYWRNaWRkbGV3YXJlIiwiZGVsZXRlSW1hZ2UiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoib0VBSUEsTUFBQUEsYUFBQUMsUUFBQSx1QkFDQUMsa0JBQUFELFFBQUEsc0JBRUFFLHFCQUFBRixRQUFBLGdEQUVBRyxNQUFBSCxRQUFBLHVCQUdNSSxLQUFPSixRQUFRLFFBRXJCLElBQUlLLElBQU1MLFFBQVEsVUFFbEIsTUFBTU0sSUFBTSx1QkFLWkMsc0NBQTJETixrQkFBQU8sUUFLekRDLFlBQWFDLEdBQ1hDLE1BQU1DLE9BQU9DLE9BQU9ILEdBQVlJLFNBQVVWLEtBQUtXLEtBQUtDLFVBQVcsa0JBSGhEQyxLQUFBQyxzQkFBZ0NuQixhQUFBUyxRQUFVVyxXQUt6REYsS0FBS0csYUFBZSxJQUFJVixFQUFTVyxTQUFTQyxhQUFhWixFQUFTYSxHQUFHQyxVQUFXZCxFQUFTYSxHQUFHRSxRQUMxRlIsS0FBS1Msa0JBQW9CQyxDQUFBQSxNQUFlNUIsYUFBQVMsUUFBVW9CLFdBQVc3QixhQUFBUyxRQUFVcUIsbUJBQW1CRixLQUUxRmhCLE1BQU1tQixTQUFTLElBQUssQ0FBQ0MsRUFBS0MsRUFBS0MsS0FDN0JELEVBQUlFLE9BQU8sOEJBR2J2QixNQUFNbUIsU0FBUyxjQUFlLENBQUNDLEVBQUtDLEVBQUtDLEtBQ3ZDL0IscUJBQUFNLFFBQWlCMkIsZ0JBQWdCQyxLQUFLSixFQUFJSyxLQUFLQyxLQUFLTixJQUFNTyxNQUFNTixLQUdsRXRCLE1BQU02QixVQUFVLGFBQWMsQ0FBQ1QsRUFBS0MsRUFBS0MsS0FDdkMsTUFBTVEsRUFBWVYsRUFBSVcsTUFBTUQsVUFDdkJBLEVBR0h2QyxxQkFBQU0sUUFBaUJtQyxnQkFBZ0JGLEVBQVdWLEVBQUlhLE1BQU1SLEtBQUtKLEVBQUlLLEtBQUtDLEtBQUtOLElBQU1PLE1BQU1OLEdBRnJGRCxFQUFJSyxNQUFPUSxRQUFRLEVBQU9DLFdBQVksNEJBTTFDbkMsTUFBTTZCLFVBQVUsa0JBQW1CLENBQUNULEVBQUtDLEVBQUtDLEtBQzVDLE1BQU1RLEVBQVlWLEVBQUlXLE1BQU1ELFVBRXZCQSxFQUdIdkMscUJBQUFNLFFBQWlCdUMsZ0JBQWdCTixFQUFXVixFQUFJYSxLQUFLSSxHQUFJakIsRUFBSWEsTUFDeERSLEtBQUtKLEVBQUlLLEtBQUtDLEtBQUtOLElBQU1PLE1BQU1OLEdBSHBDRCxFQUFJSyxNQUFPUSxRQUFRLEVBQU9DLFdBQVksNEJBTzFDbkMsTUFBTTZCLFVBQVUsb0JBQXFCLENBQUNULEVBQUtDLEVBQUtDLEtBQzlDL0IscUJBQUFNLFFBQWlCeUMsZ0JBQWdCbEIsRUFBSWEsS0FBS0ksSUFBSVosS0FBS0osRUFBSUssS0FBS0MsS0FBS04sSUFBTU8sTUFBTU4sS0FHL0VoQixLQUFLdUIsVUFBVSxpQkFBa0IsQ0FBQ1QsRUFBS0MsRUFBS0MsS0FDMUMsTUFBTU4sRUFBV0ksRUFBSWEsS0FBS2pCLFNBQzFCSyxFQUFJSyxNQUFPUSxRQUFRLEVBQU1LLEtBQU0vQyxNQUFNZ0QsWUFBWXhCLE9BR25EaEIsTUFBTW1CLFNBQVMsVUFBVyxDQUFDQyxFQUFLQyxFQUFLQyxLQUNuQ2hCLEtBQUtHLGFBQWFnQyxVQUFVbkMsS0FBS1MsbUJBQW1CVSxLQUFLaUIsSUFDdkRoRCxJQUFJaUQsUUFBUWhELElBQUssaUJBQW1CaUQsS0FBS0MsVUFBVUgsSUFDbkRyQixFQUFJSyxLQUFLZ0IsS0FDUmQsTUFBTU4sS0FHWHRCLE1BQU02QixVQUFVLFNBQ2R2QixLQUFLRyxhQUFhcUMsMkJBQTJCeEMsS0FBS0Msc0JBQXVCRCxLQUFLUyxvQkFFaEZmLE1BQU02QixVQUFVLGdCQUFpQixDQUFDVCxFQUFLQyxFQUFLQyxLQUMxQzVCLElBQUlpRCxRQUFRaEQsSUFBSywrQkFBaUNpRCxLQUFLQyxVQUFVekIsRUFBSWEsT0FDckUzQixLQUFLRyxhQUFhc0MsWUFBWXpDLEtBQUtDLHNCQUF1QmEsRUFBSWEsS0FBS2pCLFVBQVVTLEtBQUtpQixJQUNoRnJCLEVBQUlLLEtBQUtnQixLQUNSZCxNQUFNTixNQTlEZjBCLFFBQUFuRCxRQUFBRCIsImZpbGUiOiJhcHAvY29udHJvbGxlcnMvY21zL3Byb21vdGlvbi1tYW5hZ2VtZW50LWNvbnRyb2xsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgKiBhcyBQcm9taXNlIGZyb20gJ2JsdWViaXJkJ1xuaW1wb3J0ICogYXMgcHVnIGZyb20gJ3B1ZydcblxuaW1wb3J0IEFwcENvbmZpZyBmcm9tICcuLi8uLi8uLi9hcHAtY29uZmlnJ1xuaW1wb3J0IEJhc2VDb250cm9sbGVyIGZyb20gJy4uL2Jhc2UtY29udHJvbGxlcidcbmltcG9ydCBTaG9wU2VydmljZSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9zaG9wLXNlcnZpY2UnXG5pbXBvcnQgTG9jYWxTaG9wU2VydmljZSBmcm9tICcuLi8uLi9sb2NhbC1zaG9wLXNlcnZpY2VzL2xvY2FsLXNob3Atc2VydmljZSdcbmltcG9ydCB7IFNpdGVEYXRhLCBJbWFnZVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zaXRlLWRlZmluaXRpb25zJ1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi4vLi4vLi4vbGlicy91dGlscydcbmltcG9ydCBPcmRlclNlcnZpY2UgZnJvbSAnLi4vLi4vbG9jYWwtc2hvcC1zZXJ2aWNlcy9vcmRlci1zZXJ2aWNlJ1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5cbmxldCBsb2cgPSByZXF1aXJlKCducG1sb2cnKVxuXG5jb25zdCBUQUcgPSAnTWFpbkNvbnRyb2xsZXInXG5cbi8qXG5UT0RPOiBPbmx5IHVzZXIgd2l0aCBhZG1pbiBwcml2aWxlZ2UgY2FuIGFjY2VzcyB0aGlzIHBhZ2UhXG4qL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvbW90aW9uTWFuYWdlbWVudENvbnRyb2xsZXIgZXh0ZW5kcyBCYXNlQ29udHJvbGxlciB7XG4gIHByaXZhdGUgaW1hZ2VTZXJ2aWNlOiBJbWFnZVNlcnZpY2VcbiAgcHJpdmF0ZSByZWFkb25seSBpbWFnZVVSTEZvcm1hdHRlclxuICBwcml2YXRlIHJlYWRvbmx5IFBST01PVElPTl9JTUFHRVNfUEFUSDogc3RyaW5nID0gQXBwQ29uZmlnLklNQUdFX1BBVEhcblxuICBjb25zdHJ1Y3RvciAoc2l0ZURhdGE6IFNpdGVEYXRhKSB7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbihzaXRlRGF0YSwgeyB2aWV3UGF0aDogcGF0aC5qb2luKF9fZGlybmFtZSwgJy4uLy4uL3ZpZXdzJykgfSkpXG5cbiAgICB0aGlzLmltYWdlU2VydmljZSA9IG5ldyBzaXRlRGF0YS5zZXJ2aWNlcy5JbWFnZVNlcnZpY2Uoc2l0ZURhdGEuZGIuc2VxdWVsaXplLCBzaXRlRGF0YS5kYi5tb2RlbHMpXG4gICAgdGhpcy5pbWFnZVVSTEZvcm1hdHRlciA9IGZpbGVuYW1lID0+IGAke0FwcENvbmZpZy5CQVNFX1VSTH0ke0FwcENvbmZpZy5JTUFHRV9NT1VOVF9QQVRIfSR7ZmlsZW5hbWV9YFxuXG4gICAgc3VwZXIucm91dGVHZXQoJy8nLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgIHJlcy5yZW5kZXIoJ2Ntcy9wcm9tb3Rpb24tbWFuYWdlbWVudCcpXG4gICAgfSlcblxuICAgIHN1cGVyLnJvdXRlR2V0KCcvcHJvbW90aW9ucycsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgTG9jYWxTaG9wU2VydmljZS5nZXRQcm9tb3Rpb25zKCkudGhlbihyZXMuanNvbi5iaW5kKHJlcykpLmNhdGNoKG5leHQpXG4gICAgfSlcblxuICAgIHN1cGVyLnJvdXRlUG9zdCgnL3Byb21vdGlvbicsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgY29uc3QgcHJvZHVjdElkID0gcmVxLnF1ZXJ5LnByb2R1Y3RJZFxuICAgICAgaWYgKCFwcm9kdWN0SWQpIHtcbiAgICAgICAgcmVzLmpzb24oeyBzdGF0dXM6IGZhbHNlLCBlcnJNZXNzYWdlOiAncHJvZHVjdElkIGlzIHJlcXVpcmVkJyB9KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgTG9jYWxTaG9wU2VydmljZS5jcmVhdGVQcm9tb3Rpb24ocHJvZHVjdElkLCByZXEuYm9keSkudGhlbihyZXMuanNvbi5iaW5kKHJlcykpLmNhdGNoKG5leHQpXG4gICAgICB9XG4gICAgfSlcblxuICAgIHN1cGVyLnJvdXRlUG9zdCgnL3Byb21vdGlvbi9lZGl0JywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICBjb25zdCBwcm9kdWN0SWQgPSByZXEucXVlcnkucHJvZHVjdElkXG5cbiAgICAgIGlmICghcHJvZHVjdElkKSB7XG4gICAgICAgIHJlcy5qc29uKHsgc3RhdHVzOiBmYWxzZSwgZXJyTWVzc2FnZTogJ3Byb2R1Y3RJZCBpcyByZXF1aXJlZCcgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIExvY2FsU2hvcFNlcnZpY2UudXBkYXRlUHJvbW90aW9uKHByb2R1Y3RJZCwgcmVxLmJvZHkuaWQsIHJlcS5ib2R5KVxuICAgICAgICAgICAgLnRoZW4ocmVzLmpzb24uYmluZChyZXMpKS5jYXRjaChuZXh0KVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBzdXBlci5yb3V0ZVBvc3QoJy9wcm9tb3Rpb24vZGVsZXRlJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICBMb2NhbFNob3BTZXJ2aWNlLmRlbGV0ZVByb21vdGlvbihyZXEuYm9keS5pZCkudGhlbihyZXMuanNvbi5iaW5kKHJlcykpLmNhdGNoKG5leHQpXG4gICAgfSlcblxuICAgIHRoaXMucm91dGVQb3N0KCcvaW1hZ2UvZ2V0LXVybCcsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgY29uc3QgZmlsZW5hbWUgPSByZXEuYm9keS5maWxlbmFtZVxuICAgICAgcmVzLmpzb24oeyBzdGF0dXM6IHRydWUsIGRhdGE6IFV0aWxzLmdldEltYWdlVVJMKGZpbGVuYW1lKSB9KVxuICAgIH0pXG5cbiAgICBzdXBlci5yb3V0ZUdldCgnL2ltYWdlcycsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgdGhpcy5pbWFnZVNlcnZpY2UuZ2V0SW1hZ2VzKHRoaXMuaW1hZ2VVUkxGb3JtYXR0ZXIpLnRoZW4ocmVzcCA9PiB7XG4gICAgICAgIGxvZy52ZXJib3NlKFRBRywgJy9pbWFnZXMuR0VUKCk6JyArIEpTT04uc3RyaW5naWZ5KHJlc3ApKVxuICAgICAgICByZXMuanNvbihyZXNwKVxuICAgICAgfSkuY2F0Y2gobmV4dClcbiAgICB9KVxuXG4gICAgc3VwZXIucm91dGVQb3N0KCcvaW1hZ2UnLFxuICAgICAgdGhpcy5pbWFnZVNlcnZpY2UuZ2V0RXhwcmVzc1VwbG9hZE1pZGRsZXdhcmUodGhpcy5QUk9NT1RJT05fSU1BR0VTX1BBVEgsIHRoaXMuaW1hZ2VVUkxGb3JtYXR0ZXIpKVxuXG4gICAgc3VwZXIucm91dGVQb3N0KCcvaW1hZ2UvZGVsZXRlJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICBsb2cudmVyYm9zZShUQUcsICdpbWFnZS9kZWxldGUuUE9TVDogcmVxLmJvZHk9JyArIEpTT04uc3RyaW5naWZ5KHJlcS5ib2R5KSlcbiAgICAgIHRoaXMuaW1hZ2VTZXJ2aWNlLmRlbGV0ZUltYWdlKHRoaXMuUFJPTU9USU9OX0lNQUdFU19QQVRILCByZXEuYm9keS5maWxlbmFtZSkudGhlbihyZXNwID0+IHtcbiAgICAgICAgcmVzLmpzb24ocmVzcClcbiAgICAgIH0pLmNhdGNoKG5leHQpXG4gICAgfSlcbiAgfVxufVxuIl19
