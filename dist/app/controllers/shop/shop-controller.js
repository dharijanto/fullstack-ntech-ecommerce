"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Promise=require("bluebird"),base_controller_1=require("../base-controller"),local_shop_service_1=require("../../local-shop-services/local-shop-service"),product_service_1=require("../../../services/product-service"),Utils=require("../../../libs/utils"),search_service_1=require("../../../services/search-service"),path=require("path");let log=require("npmlog");const TAG="MainController";class CartController extends base_controller_1.default{constructor(e){super(Object.assign(e,{viewPath:path.join(__dirname,"../../views")})),this.addInterceptor((e,t,r)=>{product_service_1.default.getCategories({},!0).then(e=>{if(!e.status||!e.data)throw new Error("Failed to retrieve categories: "+e.errMessage);Object.keys(Utils).forEach(e=>{t.locals[e]=Utils[e]}),t.locals.categories=e.data,r()}).catch(e=>{r(e)})}),this.routeGet("/search",(e,t,r)=>{log.verbose(TAG,"/search.GET()");const o=e.query.query;Promise.join(search_service_1.default.searchSubCategories(o),search_service_1.default.searchInStockProducts(o),search_service_1.default.searchPOProducts(o)).spread((e,r,a)=>{let s="resp="+JSON.stringify(e,null,2)+"<br><br>";if(s+="resp2="+JSON.stringify(r,null,2)+"<br><br>",s+="resp3="+JSON.stringify(a,null,2),!(e.status&&e.data&&r.status&&r.data&&a.status&&a.data))throw new Error("Failed to retrieve some information: "+e.errMessage||r.errMessage||a.errMessage);t.locals.inStockProducts=r.data.products,t.locals.poProducts=a.data.products,t.locals.searchQuery=o,t.render("search")})}),this.routeGet("/",(e,t,r)=>{log.verbose(TAG,"/.GET()"),t.locals.currentPOProductPage=e.query["po-products-page"]||1,t.locals.currentInStockProductPage=e.query["in-stock-products-page"]||1;Promise.join(local_shop_service_1.default.getPromotions(),local_shop_service_1.default.getInStockProducts({pageIndex:t.locals.currentInStockProductPage-1,pageSize:9}),local_shop_service_1.default.getPOProducts({pageIndex:t.locals.currentPOProductPage-1,pageSize:9})).spread((e,r,o)=>{if(!(e.status&&e.data&&r.status&&r.data&&o.status&&o.data))throw new Error("Failed to retrieve some information: "+e.errMessage||r.errMessage||o.errMessage);t.locals.inStockProductTotalPage=Utils.getNumberOfPage(r.data.totalProducts,9),t.locals.poProductTotalPage=Utils.getNumberOfPage(o.data.totalProducts,9),t.locals.promotions=e.data.slice(0,2),t.locals.smallPromotions=e.data.slice(2,e.data.length),t.locals.inStockProducts=r.data.products,t.locals.poProducts=o.data.products,t.render("home")}).catch(r)}),this.routeGet("/:categoryId/*/:subCategoryId/*/:productId/*/",(e,t,r)=>{log.verbose(TAG,"/:categoryId/*/:subCategoryId/*/:productId/*/.GET()");e.params.categoryId,e.params.subCategoryId;const o=e.params.productId;Promise.join(local_shop_service_1.default.getInStockProduct(o),local_shop_service_1.default.getPOProduct(o)).spread((e,r)=>{e.status?(t.locals.product=e.data,log.verbose(TAG,"product="+JSON.stringify(e.data)),t.render("instock-product")):r.status?(t.locals.product=r.data,log.verbose(TAG,"product="+JSON.stringify(r.data)),t.render("po-product")):t.render("product-unavailable")}).catch(e=>{r(e)})}),this.routeGet("/:categoryId/*/:subCategoryId/*/",(e,t,r)=>{log.verbose(TAG,"/:categoryId/*/:subCategoryId/*/.GET()");const o=e.params.subCategoryId;t.locals.currentInStockProductPage=e.query["in-stock-products-page"]||1,t.locals.currentPOProductPage=e.query["po-products-page"]||1;Promise.join(local_shop_service_1.default.getInStockProducts({subCategoryId:o}),local_shop_service_1.default.getPOProducts({subCategoryId:o}),product_service_1.default.getSubCategory(o)).spread((e,r,o)=>{if(!(e.status&&e.data&&r.status&&r.data&&o.status&&o.data))throw console.dir("resp1="+JSON.stringify(e)),console.dir("resp2="+JSON.stringify(r)),console.dir("resp3="+JSON.stringify(o)),new Error("Failed to retrieve inStockProducts, poProducts, or subCategory: "+(e.errMessage||r.errMessage||o.errMessage));t.locals.inStockProductTotalPage=Utils.getNumberOfPage(e.data.totalProducts,15),t.locals.poProductTotalPage=Utils.getNumberOfPage(r.data.totalProducts,15),t.locals.inStockProducts=e.data.products,t.locals.poProducts=r.data.products,t.locals.subCategory=o.data,t.locals.category=o.data.category,t.render("sub-category")}).catch(e=>{r(e)})}),this.routeGet("/:categoryId/*/",(e,t,r)=>{log.verbose(TAG,"/:categoryId/*/.GET()");const o=e.params.categoryId;t.locals.currentInStockProductPage=e.query["in-stock-products-page"]||1,t.locals.currentPOProductPage=e.query["po-products-page"]||1;log.verbose(TAG,"/:categoryId/*.GET: req.params="+JSON.stringify(e.params)),Promise.join(local_shop_service_1.default.getInStockProducts({categoryId:o,pageSize:15,pageIndex:t.locals.currentInStockProductPage-1}),local_shop_service_1.default.getPOProducts({categoryId:o,pageSize:15,pageIndex:t.locals.currentPOProductPage-1}),product_service_1.default.getCategory(o)).spread((e,r,o)=>{if(!(e.status&&e.data&&r.status&&r.data&&o.status&&o.data))throw new Error("Failed to retrieve inStockProducts, poProducts, or subCategory: "+e.errMessage||r.errMessage||o.errMessage);t.locals.inStockProductTotalPage=Utils.getNumberOfPage(e.data.totalProducts,15),t.locals.poProductTotalPage=Utils.getNumberOfPage(r.data.totalProducts,15),t.locals.inStockProducts=e.data.products,t.locals.poProducts=r.data.products,t.locals.category=o.data,t.render("category")}).catch(e=>{r(e)})})}}exports.default=CartController;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
