"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const express=require("express"),app_config_1=require("../app-config"),Promise=require("bluebird"),base_controller_1=require("./controllers/base-controller"),cart_controller_1=require("./controllers/cart-controller"),cms_controller_1=require("./controllers/cms-controller"),product_service_1=require("../services/product-service"),local_shop_service_1=require("../services/local-shop-service"),sequelize_service_1=require("../services/sequelize-service"),Utils=require("../libs/utils"),path=require("path");let log=require("npmlog");log.level="debug";let CredentialController=require(path.join(__dirname,"controllers/credential-controller"));const TAG="MainController";class Controller extends base_controller_1.default{constructor(e){super(Object.assign(e,{viewPath:path.join(__dirname,"views")})),sequelize_service_1.default.initialize(e.db.sequelize,e.db.models),this.routeUse(app_config_1.default.IMAGE_MOUNT_PATH,express.static(app_config_1.default.IMAGE_PATH)),local_shop_service_1.default.initialize().then(t=>{t.status?(this.addInterceptor((e,t,r)=>{log.verbose(TAG,"req.path="+e.path),log.verbose(TAG,"loggedIn="+e.isAuthenticated()),log.verbose(TAG,"req.on="+JSON.stringify(e.session)),product_service_1.default.getCategories({},!0).then(e=>{if(!e.status||!e.data)throw new Error("Failed to retrieve categories: "+e.errMessage);Object.keys(Utils).forEach(e=>{t.locals[e]=Utils[e]}),t.locals.categories=e.data,r()}).catch(e=>{r(e)})}),this.routeUse("/cms",new cms_controller_1.default(e).getRouter()),this.routeUse("/cart",new cart_controller_1.default(e).getRouter()),this.routeGet("/",(e,t,r)=>{t.locals.currentPOProductPage=e.query["po-products-page"]||1,t.locals.currentInStockProductPage=e.query["in-stock-products-page"]||1;Promise.join(local_shop_service_1.default.getPromotion(),local_shop_service_1.default.getInStockProducts({pageIndex:t.locals.currentInStockProductPage-1,pageSize:9}),local_shop_service_1.default.getPOProducts({pageIndex:t.locals.currentPOProductPage-1,pageSize:9})).spread((e,r,o)=>{if(!(e.status&&e.data&&r.status&&r.data&&o.status&&o.data))throw new Error("Failed to retrieve some information: "+e.errMessage||r.errMessage||o.errMessage);t.locals.inStockProductTotalPage=Utils.getNumberOfPage(r.data.totalProducts,9),t.locals.poProductTotalPage=Utils.getNumberOfPage(o.data.totalProducts,9),t.locals.promotions=e.data.slice(0,2),t.locals.smallPromotions=e.data.slice(2,e.data.length),t.locals.inStockProducts=r.data.products,t.locals.poProducts=o.data.products,t.render("home")}).catch(r)}),this.routeGet("/:categoryId/*/:subCategoryId/*/:productId/*/",(e,t,r)=>{e.params.categoryId,e.params.subCategoryId;const o=e.params.productId;Promise.join(local_shop_service_1.default.getInStockProduct(o),local_shop_service_1.default.getPOProduct(o)).spread((e,r)=>{e.status?(t.locals.product=e.data,log.verbose(TAG,"product="+JSON.stringify(e.data)),t.render("instock-product")):r.status?(t.locals.product=r.data,log.verbose(TAG,"product="+JSON.stringify(r.data)),t.render("po-product")):t.render("product-unavailable")}).catch(e=>{r(e)})}),this.routeGet("/:categoryId/*/:subCategoryId/*/",(e,t,r)=>{const o=e.params.subCategoryId;t.locals.currentInStockProductPage=e.query["in-stock-products-page"]||1,t.locals.currentPOProductPage=e.query["po-products-page"]||1;Promise.join(local_shop_service_1.default.getInStockProducts({subCategoryId:o}),local_shop_service_1.default.getPOProducts({subCategoryId:o}),product_service_1.default.getSubCategory(o)).spread((e,r,o)=>{if(!(e.status&&e.data&&r.status&&r.data&&o.status&&o.data))throw console.dir("resp1="+JSON.stringify(e)),console.dir("resp2="+JSON.stringify(r)),console.dir("resp3="+JSON.stringify(o)),new Error("Failed to retrieve inStockProducts, poProducts, or subCategory: "+(e.errMessage||r.errMessage||o.errMessage));t.locals.inStockProductTotalPage=Utils.getNumberOfPage(e.data.totalProducts,15),t.locals.poProductTotalPage=Utils.getNumberOfPage(r.data.totalProducts,15),t.locals.inStockProducts=e.data.products,t.locals.poProducts=r.data.products,t.locals.subCategory=o.data,t.locals.category=o.data.category,t.render("sub-category")}).catch(e=>{r(e)})}),this.routeGet("/:categoryId/*/",(e,t,r)=>{const o=e.params.categoryId;t.locals.currentInStockProductPage=e.query["in-stock-products-page"]||1,t.locals.currentPOProductPage=e.query["po-products-page"]||1;log.verbose(TAG,"/:categoryId/*.GET: req.params="+JSON.stringify(e.params)),Promise.join(local_shop_service_1.default.getInStockProducts({categoryId:o,pageSize:15,pageIndex:t.locals.currentInStockProductPage-1}),local_shop_service_1.default.getPOProducts({categoryId:o,pageSize:15,pageIndex:t.locals.currentPOProductPage-1}),product_service_1.default.getCategory(o)).spread((e,r,o)=>{if(!(e.status&&e.data&&r.status&&r.data&&o.status&&o.data))throw new Error("Failed to retrieve inStockProducts, poProducts, or subCategory: "+e.errMessage||r.errMessage||o.errMessage);t.locals.inStockProductTotalPage=Utils.getNumberOfPage(e.data.totalProducts,15),t.locals.poProductTotalPage=Utils.getNumberOfPage(r.data.totalProducts,15),t.locals.inStockProducts=e.data.products,t.locals.poProducts=r.data.products,t.locals.category=o.data,t.render("category")}).catch(e=>{r(e)})})):this.routeGet("*",(e,r,o)=>{r.status(500).send(t.errMessage)})})}}module.exports=Controller;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
