"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Promise=require("bluebird"),moment=require("moment"),app_config_1=require("../app-config"),crud_service_1=require("../services/crud-service"),local_shop_service_1=require("../services/local-shop-service"),order_service_1=require("../services/order-service"),print_service_1=require("../services/print-service");class LocalOrderService extends crud_service_1.default{constructor(){super(),this.receiptPrinter=new print_service_1.default(app_config_1.default.RECEIPT_PRINTER.DEVICE_NAME,app_config_1.default.RECEIPT_PRINTER.PAPER_WIDTH)}getOrders(){return order_service_1.default.getOrders(local_shop_service_1.default.getLocalShopId())}getOpenOrders(){return this.getSequelize().query(`SELECT * FROM ordersView WHERE shopId = ${local_shop_service_1.default.getLocalShopId()} AND status != 'Close' AND status != 'Cancelled'`,{type:this.getSequelize().QueryTypes.SELECT}).then(e=>e?{status:!0,data:e}:{status:!1})}getClosedOrders(){return this.getSequelize().query(`SELECT * FROM ordersView WHERE shopId = ${local_shop_service_1.default.getLocalShopId()} AND status = 'Close' OR status = 'Cancelled'`,{type:this.getSequelize().QueryTypes.SELECT}).then(e=>e?{status:!0,data:e}:{status:!1})}getOrderDetails(e){return order_service_1.default.getOrderDetails(e)}addOrder(e){return super.create("Order",Object.assign(e,{status:"Open",shopId:local_shop_service_1.default.getLocalShopId()}))}editOrder(e){const r={fullName:e.fullName,phoneNumber:e.phoneNumber,notes:e.notes};return e.id?super.readOne("Order",{id:e.id}).then(t=>t.status&&t.data?"Open"!==t.data.status?{status:!1,errMessage:"Only open order can be editted!"}:e.fullName?super.update("Order",r,{id:e.id}):Promise.resolve({status:!1,errMssage:"fullName is required!"}):{status:!1,errMessage:"Order is not found!"}):Promise.resolve({status:!1,errMessage:"Order is required!"})}cancelOrder(e){return super.readOne("Order",{id:e}).then(r=>r.status&&r.data?"Open"!==r.data.status?{status:!1,errMessage:"Only open order can be cancelled!"}:super.update("Order",{status:"Cancelled"},{id:e}):{status:!1,errMessage:"Order is not found!"})}closeOrder(e){return super.readOne("Order",{id:e}).then(r=>r.status&&r.data?"Open"===r.data.status?super.read("OrderDetail",{orderId:e}).then(r=>{if(r.status){if(r.data){const t=r.data;let s=!1;return t.forEach(e=>{"PO"===e.status&&(s=!0)}),super.update("Order",{status:s?"PO":"Close"},{id:e})}return{status:!1,errMessage:"Order is empty!"}}return{status:!1,errMessage:r.errMessage}}):(console.log("status="+JSON.stringify(r.data)),{status:!1,errMessage:"Only open order can be closed!"}):{status:!1,errMessage:"Order is not found!"})}finishPOOrder(e){return super.readOne("Order",{id:e}).then(r=>{if(r.status&&r.data){return"PO"===r.data.status?super.update("Order",{status:"Close"},{id:e}):{status:!1,errMessage:"Only PO order can be finished!"}}return{status:!1,errMessage:"Order is not found!"}})}isOpenOrder(e){return super.readOne("Order",{id:e}).then(e=>e.status&&e.data?"Open"===e.data.status?{status:!0}:{status:!1,errMessage:"Order is not of 'Open' status!"}:{status:!1,errMessage:"Order not found!"})}addOrderDetail(e,r,t){return t<=0?Promise.resolve({status:!1,errMessage:"Quantity needs to be a positive number!"}):this.isOpenOrder(e).then(s=>s.status?Promise.join(local_shop_service_1.default.getVariantAvailability(r),local_shop_service_1.default.getVariantInformation(r)).spread((s,a)=>{if(s.status&&s.data&&a.status&&a.data){const d=s.data;if("readyStock"===d.status&&t>(d.quantity||0))return{status:!1,errMessage:`Only ${d.quantity} ready stock(s) left!`};const u=a.data.product.shopPrice,i="preOrder"===d.status?"PO":"Ready";return super.create("OrderDetail",{variantId:r,orderId:e,status:i,quantity:t,price:u})}return{status:!1,errMessage:"Failed to get variant information: "+s.errMessage||a.errMessage}}):{status:!1,errMessage:s.errMessage})}editOrderDetail(e,r,t){}deleteOrderDetail(e){return e?super.readOne("OrderDetail",{id:e}).then(r=>{if(r.status&&r.data){const t=r.data.orderId;return this.isOpenOrder(t).then(r=>r.status?super.delete("OrderDetail",{id:e}):{status:!1,errMessage:r.errMessage})}return{status:!1,errMessage:r.errMessage}}):Promise.resolve({status:!1,errMessage:"orderDetailId is reuqired!"})}printReceipt(e,r=1){return Promise.resolve(this.receiptPrinter.printURL(e,r).then(e=>e.status?{status:!0}:{status:!1,errMessage:e.errMessage}))}getReceipt(e){return e?order_service_1.default.getOrder(e).then(r=>{if(r.status&&r.data){const t=r.data;if("Close"===t.status||"PO"===t.status){let s={orderId:t.id,fullName:t.fullName,phoneNumber:t.phoneNumber,status:t.status,totalPrice:t.price,poDuration:void 0,orderDate:moment(r.data.updatedAt).format("DD-MM-YY HH:mm"),printDate:moment().format("DD-MM-YY HH:mm"),items:[]};return this.getOrderDetails(e).then(e=>e.status&&e.data?(e.data.forEach(e=>{s.items.push({name:e.productName,status:e.status,variant:e.variantName,price:e.price,quantity:e.quantity}),"PO"===e.status&&(s.poDuration?s.poDuration=Math.max(s.poDuration,e.preOrderDuration):s.poDuration=e.preOrderDuration)}),{status:!0,data:s}):{status:!1,errMessage:"Order is empty!"})}return{status:!1,errMessage:"Only closed or PO order can be printed!"}}return{status:!1,errMessage:"Order is not found!"}}):Promise.resolve({status:!1,errMessage:"orderId is required!"})}}exports.default=new LocalOrderService;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
