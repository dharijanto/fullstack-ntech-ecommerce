"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(n,p){function o(e){try{s(r.next(e))}catch(e){p(e)}}function a(e){try{s(r.throw(e))}catch(e){p(e)}}function s(e){e.done?n(e.value):new i(function(t){t(e.value)}).then(o,a)}s((r=r.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const path=require("path"),puppeteer=require("puppeteer"),printer=require("printer"),app_config_1=require("../app-config");class PrintService{constructor(e,t,i){this.printerName=e,this.paperWidth=t,this.paperHeight=i}printFile(e,t=1){return __awaiter(this,void 0,void 0,function*(){return new Promise((i,r)=>{printer.printFile({filename:e,printer:this.printerName,success:function(e){i({status:!0,data:{jobId:e}})},options:{"fit-to-page":!0,copies:t},error:function(e){r(e)}})})})}printURL(e,t=1){return __awaiter(this,void 0,void 0,function*(){const i=yield(yield puppeteer.launch()).newPage();yield i.goto(e,{waitUntil:"networkidle0"});const r=path.join(app_config_1.default.GENERATED_PRINT_PDF_PATH,`${(new Date).getMilliseconds()}.pdf`);return yield i.pdf({width:this.paperWidth,height:this.paperHeight,path:r}),this.printFile(r,t)})}}exports.default=PrintService;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXJ2aWNlcy9wcmludC1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwicHVwcGV0ZWVyIiwicHJpbnRlciIsImFwcF9jb25maWdfMSIsIlByaW50U2VydmljZSIsIltvYmplY3QgT2JqZWN0XSIsInByaW50ZXJOYW1lIiwicGFwZXJXaWR0aCIsInBhcGVySGVpZ2h0IiwidGhpcyIsInBkZkZpbGVQYXRoIiwibnVtQ29waWVzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJwcmludEZpbGUiLCJmaWxlbmFtZSIsInN1Y2Nlc3MiLCJqb2JJZCIsInN0YXR1cyIsImRhdGEiLCJvcHRpb25zIiwiZml0LXRvLXBhZ2UiLCJjb3BpZXMiLCJlcnJvciIsImVyciIsImZ1bGxVUkwiLCJwYWdlIiwibGF1bmNoIiwibmV3UGFnZSIsImdvdG8iLCJ3YWl0VW50aWwiLCJvdXRGaWxlIiwiam9pbiIsImRlZmF1bHQiLCJHRU5FUkFURURfUFJJTlRfUERGX1BBVEgiLCJEYXRlIiwiZ2V0TWlsbGlzZWNvbmRzIiwicGRmIiwid2lkdGgiLCJoZWlnaHQiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiMldBQUEsTUFBQUEsS0FBQUMsUUFBQSxRQUdBQyxVQUFBRCxRQUFBLGFBQ0FFLFFBQUFGLFFBQUEsV0FDQUcsYUFBQUgsUUFBQSx1QkFRQUksYUFNRUMsWUFBYUMsRUFBcUJDLEVBQW9CQyxHQUNwREMsS0FBS0gsWUFBY0EsRUFDbkJHLEtBQUtGLFdBQWFBLEVBQ2xCRSxLQUFLRCxZQUFjQSxFQUlQSCxVQUFXSyxFQUFxQkMsRUFBb0IsbURBQ2hFLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxFQUFTQyxLQUMzQlosUUFBUWEsV0FBV0MsU0FBVU4sRUFDM0JSLFFBQVNPLEtBQUtILFlBQ2RXLFFBQVMsU0FBVUMsR0FDakJMLEdBQVVNLFFBQVEsRUFBTUMsTUFBUUYsTUFBQUEsTUFHbENHLFNBQ0VDLGVBQWUsRUFDZkMsT0FBVVosR0FFWmEsTUFBTyxTQUFVQyxHQUNmWCxFQUFPVyxVQU9UcEIsU0FBVXFCLEVBQWlCZixFQUFvQixtREFDbkQsTUFDTWdCLGNBRGdCMUIsVUFBVTJCLFVBQ0xDLGdCQUNyQkYsRUFBS0csS0FBS0osR0FDZEssVUFBVyxpQkFFYixNQUFNQyxFQUFVakMsS0FBS2tDLEtBQUs5QixhQUFBK0IsUUFBVUMsNkJBQTZCLElBQUlDLE1BQU9DLHlCQUU1RSxhQURNVixFQUFLVyxLQUFNQyxNQUFPOUIsS0FBS0YsV0FBWWlDLE9BQVEvQixLQUFLRCxZQUFhVCxLQUFNaUMsSUFDbEV2QixLQUFLTSxVQUFVaUIsRUFBU3JCLE1BSW5DOEIsUUFBQVAsUUFBZTlCIiwiZmlsZSI6InNlcnZpY2VzL3ByaW50LXNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnXG5cbi8vIGltcG9ydCAqIGFzIFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnXG5pbXBvcnQgKiBhcyBwdXBwZXRlZXIgZnJvbSAncHVwcGV0ZWVyJ1xuaW1wb3J0ICogYXMgcHJpbnRlciBmcm9tICdwcmludGVyJ1xuaW1wb3J0IEFwcENvbmZpZyBmcm9tICcuLi9hcHAtY29uZmlnJ1xuXG4vLyBUT0RPOlxuLypcbiAgVGhpcyBzaG91bGQgYmUgdXNlZCB3aGVuIG9yZGVyIG1hbmFnZW1lbnQgb3BlcmF0aW9uIGlzIGRvbmUuXG4gIEZvciBleGFtcGxlLCB3aGVuIGFuIG9yZGVyIGlzICdDbG9zZWQnIG9yICdGaW5pc2ggUE8tZWQnIGEgcHJpbnQgam9iIHNob3VsZCBiZVxuICBxdWV1ZWQuXG4qL1xuY2xhc3MgUHJpbnRTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBwYXBlcldpZHRoOiBzdHJpbmdcbiAgcHJpdmF0ZSBwYXBlckhlaWdodD86IHN0cmluZ1xuICBwcml2YXRlIHByaW50ZXJOYW1lOiBzdHJpbmdcblxuICAvLyBwYXBlckhlaWdodDogd2hlbiB0aGlzIGlzIGxlZnQgYmxhbmssIHByaW50ZXIgd291bGQgZmlndXJlIGl0IG91dCBhdXRvbWF0aWNhbGx5XG4gIGNvbnN0cnVjdG9yIChwcmludGVyTmFtZTogc3RyaW5nLCBwYXBlcldpZHRoOiBzdHJpbmcsIHBhcGVySGVpZ2h0Pzogc3RyaW5nKSB7XG4gICAgdGhpcy5wcmludGVyTmFtZSA9IHByaW50ZXJOYW1lXG4gICAgdGhpcy5wYXBlcldpZHRoID0gcGFwZXJXaWR0aFxuICAgIHRoaXMucGFwZXJIZWlnaHQgPSBwYXBlckhlaWdodFxuXG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHByaW50RmlsZSAocGRmRmlsZVBhdGg6IHN0cmluZywgbnVtQ29waWVzOiBudW1iZXIgPSAxKTogUHJvbWlzZTxOQ1Jlc3BvbnNlPHsgam9iSWQ6IG51bWJlcn0+PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHByaW50ZXIucHJpbnRGaWxlKHtmaWxlbmFtZTogcGRmRmlsZVBhdGgsXG4gICAgICAgIHByaW50ZXI6IHRoaXMucHJpbnRlck5hbWUsIC8vIHByaW50ZXIgbmFtZSwgaWYgbWlzc2luZyB0aGVuIHdpbGwgcHJpbnQgdG8gZGVmYXVsdCBwcmludGVyXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqb2JJZCkge1xuICAgICAgICAgIHJlc29sdmUoeyBzdGF0dXM6IHRydWUsIGRhdGE6IHsgam9iSWQgfSB9KVxuICAgICAgICB9LFxuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FwcGxlL2N1cHMvYmxvYi9tYXN0ZXIvY3Vwcy9jdXBzLmggZm9yIG1vcmUgb3B0aW9uc1xuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgJ2ZpdC10by1wYWdlJzogdHJ1ZSxcbiAgICAgICAgICAnY29waWVzJzogbnVtQ29waWVzXG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KGVycilcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KSBhcyBQcm9taXNlPE5DUmVzcG9uc2U8eyBqb2JJZDogbnVtYmVyfT4+XG4gIH1cblxuICAvLyBmdWxsVVJMOiBDb21wbGV0ZSBVUkwuIFRoaXMgY2FuJ3QgYmUgcmVsYXRpdmUgcGF0aCBiZWNhdXNlIHRoaXMgaXMgcGFzc2VkIHRvIGEgc2VwYXJhdGUgcHJvY2VzcyAocHVwcGV0ZWVyKVxuICBhc3luYyBwcmludFVSTCAoZnVsbFVSTDogc3RyaW5nLCBudW1Db3BpZXM6IG51bWJlciA9IDEpOiBQcm9taXNlPE5DUmVzcG9uc2U8eyBqb2JJZDogbnVtYmVyIH0+PiB7XG4gICAgY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goKVxuICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKVxuICAgIGF3YWl0IHBhZ2UuZ290byhmdWxsVVJMLCB7XG4gICAgICB3YWl0VW50aWw6ICduZXR3b3JraWRsZTAnXG4gICAgfSlcbiAgICBjb25zdCBvdXRGaWxlID0gcGF0aC5qb2luKEFwcENvbmZpZy5HRU5FUkFURURfUFJJTlRfUERGX1BBVEgsIGAke25ldyBEYXRlKCkuZ2V0TWlsbGlzZWNvbmRzKCl9LnBkZmApXG4gICAgYXdhaXQgcGFnZS5wZGYoeyB3aWR0aDogdGhpcy5wYXBlcldpZHRoLCBoZWlnaHQ6IHRoaXMucGFwZXJIZWlnaHQsIHBhdGg6IG91dEZpbGUgfSlcbiAgICByZXR1cm4gdGhpcy5wcmludEZpbGUob3V0RmlsZSwgbnVtQ29waWVzKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByaW50U2VydmljZVxuIl19
