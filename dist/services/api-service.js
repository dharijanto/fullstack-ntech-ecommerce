var path=require("path"),axios=require("axios"),log=require("npmlog"),url=require("url"),AppConfig=require(path.join(__dirname,"../app-config"));const TAG="APIService";class APIService{constructor({baseURL:e,apiSubFolder:s}){this._axios=axios.create({baseURL:url.resolve(e,s),timeout:AppConfig.RPC_TIMEOUT})}getTag(){throw new Error("Not implemented!")}getAPIPath(e){return url.resolve(this._axios.defaults.baseURL,e)}apiPOST(e,s){return log.verbose(TAG,`apiPOST(): apiFilename=${e} payload=${JSON.stringify(s)}`),new Promise((t,r)=>{this._axios.post(e,s).then(e=>{t({status:!0,data:e.data})}).catch(a=>{a.response?(log.error(this.getTag(),`apiPOST(): apiPath=${this.getAPIPath(e)} `+`payload=${JSON.stringify(s)} err.response.status=${a.response.status} `+`err.response.statusText=${a.response.statusText} err.response.data=${JSON.stringify(a.response.data)})`),t({status:!1,errCode:a.response.status,errMessage:a.response.statusText,errData:a.response.data})):r(a)})})}apiGET(e,s=null){return log.verbose(TAG,`apiGET(): apiFilename=${e} params=${JSON.stringify(s)}`),new Promise((t,r)=>{this._axios.get(this.getAPIPath(e),{params:s}).then(e=>{t({status:!0,data:e.data})}).catch(s=>{s.response?(log.error(this.getTag(),`apiGET(): apiPath=${this.getAPIPath(e)} `+`err.response.status=${s.response.status} `+`err.response.statusText=${s.response.statusText} err.response.data=${JSON.stringify(s.response.data)})`),t({status:!1,errCode:s.response.status,errMessage:s.response.statusText,errData:s.response.data})):r(s)})})}}module.exports=APIService;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXJ2aWNlcy9hcGktc2VydmljZS5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImF4aW9zIiwibG9nIiwidXJsIiwiQXBwQ29uZmlnIiwiam9pbiIsIl9fZGlybmFtZSIsIlRBRyIsIkFQSVNlcnZpY2UiLCJbb2JqZWN0IE9iamVjdF0iLCJiYXNlVVJMIiwiYXBpU3ViRm9sZGVyIiwidGhpcyIsIl9heGlvcyIsImNyZWF0ZSIsInJlc29sdmUiLCJ0aW1lb3V0IiwiUlBDX1RJTUVPVVQiLCJFcnJvciIsImFwaUZpbGVuYW1lIiwiZGVmYXVsdHMiLCJwYXlsb2FkIiwidmVyYm9zZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJQcm9taXNlIiwicmVqZWN0IiwicG9zdCIsInRoZW4iLCJyZXNwIiwic3RhdHVzIiwiZGF0YSIsImNhdGNoIiwiZXJyIiwicmVzcG9uc2UiLCJlcnJvciIsImdldFRhZyIsImdldEFQSVBhdGgiLCJlcnJDb2RlIiwiZXJyTWVzc2FnZSIsInN0YXR1c1RleHQiLCJlcnJEYXRhIiwicGFyYW1zIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBT0MsUUFBUSxRQUVmQyxNQUFRRCxRQUFRLFNBQ2hCRSxJQUFNRixRQUFRLFVBQ2RHLElBQU1ILFFBQVEsT0FFZEksVUFBWUosUUFBUUQsS0FBS00sS0FBS0MsVUFBVyxrQkFFN0MsTUFBTUMsSUFBTSxtQkFhWkMsV0FHRUMsYUFBYUMsUUFBQ0EsRUFBT0MsYUFBRUEsSUFDckJDLEtBQUtDLE9BQVNaLE1BQU1hLFFBQ2xCSixRQUFTUCxJQUFJWSxRQUFRTCxFQUFTQyxHQUM5QkssUUFBU1osVUFBVWEsY0FJdkJSLFNBQ0UsTUFBTSxJQUFJUyxNQUFNLG9CQUdsQlQsV0FBWVUsR0FDVixPQUFPaEIsSUFBSVksUUFBUUgsS0FBS0MsT0FBT08sU0FBU1YsUUFBU1MsR0FlbkRWLFFBQVNVLEVBQWFFLEdBRXBCLE9BREFuQixJQUFJb0IsUUFBUWYsOEJBQStCWSxhQUF1QkksS0FBS0MsVUFBVUgsTUFDMUUsSUFBSUksUUFBUSxDQUFDVixFQUFTVyxLQUMzQmQsS0FBS0MsT0FBT2MsS0FBS1IsRUFBYUUsR0FBU08sS0FBS0MsSUFDMUNkLEdBQVNlLFFBQVEsRUFBTUMsS0FBTUYsRUFBS0UsU0FDakNDLE1BQU1DLElBQ0hBLEVBQUlDLFVBQ05oQyxJQUFJaUMsTUFBTXZCLEtBQUt3QiwrQkFBZ0N4QixLQUFLeUIsV0FBV2xCLGlCQUNsREksS0FBS0MsVUFBVUgsMEJBQWdDWSxFQUFJQyxTQUFTSixxQ0FDM0NHLEVBQUlDLFNBQW1CLGdDQUF3QlgsS0FBS0MsVUFBVVMsRUFBSUMsU0FBU0gsVUFDekdoQixHQUFTZSxRQUFRLEVBQU9RLFFBQVNMLEVBQUlDLFNBQVNKLE9BQVFTLFdBQVlOLEVBQUlDLFNBQVNNLFdBQVlDLFFBQVNSLEVBQUlDLFNBQVNILFFBRWpITCxFQUFPTyxPQU1meEIsT0FBUVUsRUFBYXVCLEVBQVMsTUFFNUIsT0FEQXhDLElBQUlvQixRQUFRZiw2QkFBOEJZLFlBQXNCSSxLQUFLQyxVQUFVa0IsTUFDeEUsSUFBSWpCLFFBQVEsQ0FBQ1YsRUFBU1csS0FDM0JkLEtBQUtDLE9BQU84QixJQUFJL0IsS0FBS3lCLFdBQVdsQixJQUFldUIsT0FBQUEsSUFBU2QsS0FBS0MsSUFFM0RkLEdBQVNlLFFBQVEsRUFBTUMsS0FBTUYsRUFBS0UsU0FDakNDLE1BQU1DLElBQ0hBLEVBQUlDLFVBQ05oQyxJQUFJaUMsTUFBTXZCLEtBQUt3Qiw4QkFBK0J4QixLQUFLeUIsV0FBV2xCLDZCQUNyQ2MsRUFBSUMsU0FBU0oscUNBQ1JHLEVBQUlDLFNBQW1CLGdDQUF3QlgsS0FBS0MsVUFBVVMsRUFBSUMsU0FBU0gsVUFDekdoQixHQUFTZSxRQUFRLEVBQU9RLFFBQVNMLEVBQUlDLFNBQVNKLE9BQVFTLFdBQVlOLEVBQUlDLFNBQVNNLFdBQVlDLFFBQVNSLEVBQUlDLFNBQVNILFFBRWpITCxFQUFPTyxRQU9qQlcsT0FBT0MsUUFBVXJDIiwiZmlsZSI6InNlcnZpY2VzL2FwaS1zZXJ2aWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJylcblxudmFyIGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKVxudmFyIGxvZyA9IHJlcXVpcmUoJ25wbWxvZycpXG52YXIgdXJsID0gcmVxdWlyZSgndXJsJylcblxudmFyIEFwcENvbmZpZyA9IHJlcXVpcmUocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL2FwcC1jb25maWcnKSlcblxuY29uc3QgVEFHID0gJ0FQSVNlcnZpY2UnXG5cbi8qXG4gIEFsbCBHRVQvUE9TVCByZXF1ZXN0cyBzaG91bGQgZ28gdGhyb3VnaCB0aGlzIGNsYXNzIHRvIGhhdmVcbiAgdW5pZmllZCBib2lsZXJwbGF0ZSBoYW5kbGluZy5cblxuICBBbGwgUkVTVCBBUEkgY2FsbHMgcmV0dXJuIGVpdGhlcjpcbiAgIHtzdGF0dXM6IHRydWUsIGRhdGE6IFtPYmplY3RdfSlcbiAgICAgb3JcbiAgIHtzdGF0dXM6IGZhbHNlLCBlcnJDb2RlOiBbSW50ZWdlciwgSFRUUCBlcnJvciBjb2RlIGZyb20gYmFja2VuZF0sIGVyck1lc3NhZ2U6IFtTdHJpbmcsIEhUVFAgZXJyb3Igc3RhdHVzIGZyb20gYmFja2VuZF19XG5cbiAgSW4gY2FzZSBvZiBvdGhlciBlcnJvciwgYSByZWplY3RlZCBwcm9taXNlIGlzIHJldHVybmVkXG4qL1xuY2xhc3MgQVBJU2VydmljZSB7XG4gIC8vIGFwaVN1YkZvbGRlcjogc3ViZm9sZGVyIHBhdGggZm9yIHRoZSBBUElcbiAgLy8gaS5lLiAvYXBpL3YxL2NsaWVudFxuICBjb25zdHJ1Y3RvciAoe2Jhc2VVUkwsIGFwaVN1YkZvbGRlcn0pIHtcbiAgICB0aGlzLl9heGlvcyA9IGF4aW9zLmNyZWF0ZSh7XG4gICAgICBiYXNlVVJMOiB1cmwucmVzb2x2ZShiYXNlVVJMLCBhcGlTdWJGb2xkZXIpLFxuICAgICAgdGltZW91dDogQXBwQ29uZmlnLlJQQ19USU1FT1VUXG4gICAgfSlcbiAgfVxuXG4gIGdldFRhZyAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQhJylcbiAgfVxuXG4gIGdldEFQSVBhdGggKGFwaUZpbGVuYW1lKSB7XG4gICAgcmV0dXJuIHVybC5yZXNvbHZlKHRoaXMuX2F4aW9zLmRlZmF1bHRzLmJhc2VVUkwsIGFwaUZpbGVuYW1lKVxuICB9XG5cbiAgLypcbiAgICBSZXR1cm46XG4gICAgICB7c3RhdHVzOiB0cnVlLCBkYXRhOiAuLi4gfVxuICAgICAgb3JcbiAgICAgIHtzdGF0dXM6IGZhbHNlLCBlcnJDb2RlOiA0MDAsIGVyck1lc3NhZ2U6ICdCQUQgUkVRVUVTVCcsIGVyckRhdGE6ICdVc2VybmFtZSBpcyBhbHJlYWR5IHVzZWQnfVxuXG4gICAgUHJvbWlzZSByZWplY3Rpb24gb24gb3RoZXIgZXJyb3IuXG5cbiAgICBDb252ZW50aW9uOlxuICAgICAgc3RhdHVzOiB0cnVlIGlzIHJldHVybmVkIGlmIHRoZSBpbnRlbmRlZCBvcGVyYXRpb24gaXMgc3VjY2Vzc2Z1bC4gKGUuZy4gcmVnaXN0cmF0aW9uIGlzIHN1Y2Nlc3NmdWwpXG4gICAgICAgICAgICAgIGluIG90aGVyIHdvcmRzLCB0cnVlIG1lYW5zIFVJIHNob3VsZCByZW5kZXIgJ3N1Y2Nlc3MnLCBmYWxzZSBtZWFucyBVSSBzaG91bGQgcmVuZGVyICdlcnJvcidcbiAgKi9cbiAgYXBpUE9TVCAoYXBpRmlsZW5hbWUsIHBheWxvYWQpIHtcbiAgICBsb2cudmVyYm9zZShUQUcsIGBhcGlQT1NUKCk6IGFwaUZpbGVuYW1lPSR7YXBpRmlsZW5hbWV9IHBheWxvYWQ9JHtKU09OLnN0cmluZ2lmeShwYXlsb2FkKX1gKVxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLl9heGlvcy5wb3N0KGFwaUZpbGVuYW1lLCBwYXlsb2FkKS50aGVuKHJlc3AgPT4ge1xuICAgICAgICByZXNvbHZlKHtzdGF0dXM6IHRydWUsIGRhdGE6IHJlc3AuZGF0YX0pXG4gICAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgICBpZiAoZXJyLnJlc3BvbnNlKSB7XG4gICAgICAgICAgbG9nLmVycm9yKHRoaXMuZ2V0VGFnKCksIGBhcGlQT1NUKCk6IGFwaVBhdGg9JHt0aGlzLmdldEFQSVBhdGgoYXBpRmlsZW5hbWUpfSBgICtcbiAgICAgICAgICAgIGBwYXlsb2FkPSR7SlNPTi5zdHJpbmdpZnkocGF5bG9hZCl9IGVyci5yZXNwb25zZS5zdGF0dXM9JHtlcnIucmVzcG9uc2Uuc3RhdHVzfSBgICtcbiAgICAgICAgICAgIGBlcnIucmVzcG9uc2Uuc3RhdHVzVGV4dD0keyhlcnIucmVzcG9uc2Uuc3RhdHVzVGV4dCl9IGVyci5yZXNwb25zZS5kYXRhPSR7KEpTT04uc3RyaW5naWZ5KGVyci5yZXNwb25zZS5kYXRhKSl9KWApXG4gICAgICAgICAgcmVzb2x2ZSh7c3RhdHVzOiBmYWxzZSwgZXJyQ29kZTogZXJyLnJlc3BvbnNlLnN0YXR1cywgZXJyTWVzc2FnZTogZXJyLnJlc3BvbnNlLnN0YXR1c1RleHQsIGVyckRhdGE6IGVyci5yZXNwb25zZS5kYXRhfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZWplY3QoZXJyKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBhcGlHRVQgKGFwaUZpbGVuYW1lLCBwYXJhbXMgPSBudWxsKSB7XG4gICAgbG9nLnZlcmJvc2UoVEFHLCBgYXBpR0VUKCk6IGFwaUZpbGVuYW1lPSR7YXBpRmlsZW5hbWV9IHBhcmFtcz0ke0pTT04uc3RyaW5naWZ5KHBhcmFtcyl9YClcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5fYXhpb3MuZ2V0KHRoaXMuZ2V0QVBJUGF0aChhcGlGaWxlbmFtZSksIHtwYXJhbXN9KS50aGVuKHJlc3AgPT4ge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhDaXJjdWxhckpTT04uc3RyaW5naWZ5KHJlc3ApKVxuICAgICAgICByZXNvbHZlKHtzdGF0dXM6IHRydWUsIGRhdGE6IHJlc3AuZGF0YX0pXG4gICAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgICBpZiAoZXJyLnJlc3BvbnNlKSB7XG4gICAgICAgICAgbG9nLmVycm9yKHRoaXMuZ2V0VGFnKCksIGBhcGlHRVQoKTogYXBpUGF0aD0ke3RoaXMuZ2V0QVBJUGF0aChhcGlGaWxlbmFtZSl9IGAgK1xuICAgICAgICAgICAgYGVyci5yZXNwb25zZS5zdGF0dXM9JHtlcnIucmVzcG9uc2Uuc3RhdHVzfSBgICtcbiAgICAgICAgICAgIGBlcnIucmVzcG9uc2Uuc3RhdHVzVGV4dD0keyhlcnIucmVzcG9uc2Uuc3RhdHVzVGV4dCl9IGVyci5yZXNwb25zZS5kYXRhPSR7KEpTT04uc3RyaW5naWZ5KGVyci5yZXNwb25zZS5kYXRhKSl9KWApXG4gICAgICAgICAgcmVzb2x2ZSh7c3RhdHVzOiBmYWxzZSwgZXJyQ29kZTogZXJyLnJlc3BvbnNlLnN0YXR1cywgZXJyTWVzc2FnZTogZXJyLnJlc3BvbnNlLnN0YXR1c1RleHQsIGVyckRhdGE6IGVyci5yZXNwb25zZS5kYXRhfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZWplY3QoZXJyKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBUElTZXJ2aWNlXG4iXX0=
